name: Build & Release

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      version: 
        description: Version number
        required: true
        type: string
      tag: 
        description: Tag
        required: true
        type: string

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}
    
jobs:
  build:
    runs-on: ubuntu-latest-m
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
      - name: Place wintun.dll
        run: cp -r deps/wintun/bin/amd64/wintun.dll ./
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean -f .goreleaser.2.yml --fail-fast --debug --skip-publish
        env:
          SNAPSHOT_NAME: ${{ inputs.version }}
      - name: Write git status
        run: git status --branch --porcelain=v2 > ./dist/git-status.txt
      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/*.*
          retention-days: 1

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ~/build-archive
      - name: Upload to flypkgs
        env:
          FLYPKGS_API_TOKEN: ${{ secrets.FLYPKGS_API_TOKEN }}
        run: go run ./tools/distribute upload ~/build-archive

  # publish:
  #   needs: [version, upload]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version-file: "go.mod"
  #     - name: Upload to flypkgs
  #       env:
  #         FLYPKGS_API_TOKEN: ${{ secrets.FLYPKGS_API_TOKEN }}
  #       run: go run ./tools/distribute publish ${{ needs.version.outputs.next_version}}
