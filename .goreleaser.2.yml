before:
  hooks:
    - go mod download
    - go generate ./...

# snapshot:
#   name_template: '{{ .Env.SNAPSHOT_NAME  }}'

builds:
  - id: linux
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      # - arm64
      - amd64
    ldflags:
      - -X github.com/superfly/flyctl/internal/buildinfo.environment=production
      - -X github.com/superfly/flyctl/internal/buildinfo.buildDate={{.CommitDate}}
      - -X github.com/superfly/flyctl/internal/buildinfo.buildVersion={{.Version}}
      - -X github.com/superfly/flyctl/internal/buildinfo.commit={{.ShortCommit}}

  - id: macos
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    goarch:
      - arm64
      # - amd64
    ldflags:
      - -X github.com/superfly/flyctl/internal/buildinfo.environment=production
      - -X github.com/superfly/flyctl/internal/buildinfo.buildDate={{.CommitDate}}
      - -X github.com/superfly/flyctl/internal/buildinfo.buildVersion={{.Version}}
      - -X github.com/superfly/flyctl/internal/buildinfo.commit={{.ShortCommit}}

  - id: windows
    env:
      - CGO_ENABLED=0
    goos:
      - windows
    goarch:
      # - arm64
      - amd64
    ldflags:
      - -X github.com/superfly/flyctl/internal/buildinfo.environment=production
      - -X github.com/superfly/flyctl/internal/buildinfo.buildDate={{.CommitDate}}
      - -X github.com/superfly/flyctl/internal/buildinfo.buildVersion={{.Version}}
      - -X github.com/superfly/flyctl/internal/buildinfo.commit={{.ShortCommit}}

archives:
  - id: linux
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_Linux_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}
    builds: [linux]
    files: [only-the-binary*]
    wrap_in_directory: false
    format: tar.gz

  - id: macos
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_macOS_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}
    builds: [macos]
    files: [only-the-binary*]
    wrap_in_directory: false
    format: tar.gz

  - id: windows
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_Windows_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}
    builds: [windows]
    files: [wintun.dll]
    wrap_in_directory: false
    format: zip

# uploads:
#   - name: production
#     target: http://localhost:4000/api/releases
#     # {{ .ProjectName }}/{{ .Version }}/
#     method: POST

# blobs:
#   - provider: s3
#     endpoint: http://localhost:9000
#     disableSSL: true
#     bucket: assets
#     # ids:
#     #   - macos
    

release:
  disable: true
#   prerelease: auto

# dockers:
#   - goos: linux
#     goarch: amd64
#     image_templates:
#       - "flyio/flyctl:latest"
#       - "flyio/flyctl:v{{ .Version }}"
#       - "ghcr.io/superfly/flyctl:latest"
#       - "ghcr.io/superfly/flyctl:v{{ .Version }}"
#     skip_push: auto

# checksum:
#   name_template: "checksums.txt"

# snapshot:
#   name_template: "{{incpatch .Version}}-snapshot.{{.Branch}}+{{.ShortCommit}}"

# changelog:
#   sort: asc
#   filters:
#     exclude:
#       - "^docs:"
#       - "^test:"

